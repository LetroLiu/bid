spring:
  datasource:
    druid:
      stat-view-servlet:
        enabled: true
        loginUsername: admin
        loginPassword: 123456
        allow:
      web-stat-filter:
        enabled: true
    dynamic:
      druid: # 全局druid参数，绝大部分值和默认保持一致。(现已支持的参数如下,不清楚含义不要乱设置)
        # 连接池的配置信息
        # 初始化大小，最小，最大
        initial-size: 5
        min-idle: 5
        maxActive: 20
        # 配置获取连接等待超时的时间
        maxWait: 60000
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        timeBetweenEvictionRunsMillis: 60000
        # 配置一个连接在池中最小生存的时间，单位是毫秒
        minEvictableIdleTimeMillis: 300000
        validationQuery: select '1'
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        # 打开PSCache，并且指定每个连接上PSCache的大小
        poolPreparedStatements: true
        maxPoolPreparedStatementPerConnectionSize: 20
        # 不使用原生ping方法检测连接是否有效，因为原生ping方法不会更新最后收到回复的时间戳，导致连接一直被释放掉
        connection-properties: druid.mysql.usePingMethod=false
        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
        filters: stat,wall,slf4j
        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
        stat:
          merge-sql: true
          log-slow-sql: true
          slow-sql-millis: 3000

      datasource:
        master:
          url: jdbc:mysql://192.168.3.20:3306/temp?characterEncoding=UTF-8&useUnicode=true&useSSL=false&tinyInt1isBit=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai
          username: root
          password: wms456@@
          driver-class-name: com.mysql.cj.jdbc.Driver

  #redis 配置
  redis:
    database: 1
    password: e5ebb00c9f8914dc4c6db09a30cb8877
    sentinel:
      master: cachecloud-test-online-6430
      nodes:
        - 192.168.3.64:7530
        - 192.168.3.64:7531
        - 192.168.3.64:7532
    lettuce:
      pool:
        max-active: 8   #最大连接数据库连接数,设 0 为没有限制
        max-idle: 8     #最大等待连接中的数量,设 0 为没有限制
        max-wait: -1ms  #最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制。
        min-idle: 0     #最小等待连接中的数量,设 0 为没有限制
      shutdown-timeout: 100ms

  #钉钉日志报警
  dinger:
    project-id: ${spring.application.name}
    enabled: false
    dingers:
      dingtalk:
        async: true
        tokenId: d67d98106a6473bac7ff18558257f441a23aaebd72363eb8c31cd2f7fa38064f

mybatis-plus:
  configuration:
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

#日志配置
logging:
  file:
    path: ${user.home}/logs/${spring.application.name}
  level:
    root: info
    cn.letro: debug
    com.baomidou.dynamic: debug

letro:
  bid-generator:
    log:
      type: 1
      duration: 300000
    strategy: remote
    minStep: 70
    localCacheCountAlert: 20
